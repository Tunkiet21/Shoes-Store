// Generated by view binder compiler. Do not edit!
package com.example.shoesstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoesstore.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonSignUp;

  @NonNull
  public final Button buttonToggleConfirmPassword;

  @NonNull
  public final Button buttonTogglePassword;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayoutConfirmPassword;

  @NonNull
  public final EditText inputConfirmPassword;

  @NonNull
  public final EditText inputEmail;

  @NonNull
  public final EditText inputName;

  @NonNull
  public final EditText inputPassword;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textSignIn;

  @NonNull
  public final TextView textWelcome;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonSignUp, @NonNull Button buttonToggleConfirmPassword,
      @NonNull Button buttonTogglePassword, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayoutConfirmPassword,
      @NonNull EditText inputConfirmPassword, @NonNull EditText inputEmail,
      @NonNull EditText inputName, @NonNull EditText inputPassword,
      @NonNull ProgressBar progressBar, @NonNull TextView textSignIn,
      @NonNull TextView textWelcome) {
    this.rootView = rootView;
    this.buttonSignUp = buttonSignUp;
    this.buttonToggleConfirmPassword = buttonToggleConfirmPassword;
    this.buttonTogglePassword = buttonTogglePassword;
    this.constraintLayout = constraintLayout;
    this.constraintLayoutConfirmPassword = constraintLayoutConfirmPassword;
    this.inputConfirmPassword = inputConfirmPassword;
    this.inputEmail = inputEmail;
    this.inputName = inputName;
    this.inputPassword = inputPassword;
    this.progressBar = progressBar;
    this.textSignIn = textSignIn;
    this.textWelcome = textWelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSignUp;
      MaterialButton buttonSignUp = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUp == null) {
        break missingId;
      }

      id = R.id.buttonToggleConfirmPassword;
      Button buttonToggleConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonToggleConfirmPassword == null) {
        break missingId;
      }

      id = R.id.buttonTogglePassword;
      Button buttonTogglePassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonTogglePassword == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayoutConfirmPassword;
      ConstraintLayout constraintLayoutConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutConfirmPassword == null) {
        break missingId;
      }

      id = R.id.inputConfirmPassword;
      EditText inputConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmPassword == null) {
        break missingId;
      }

      id = R.id.inputEmail;
      EditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.inputName;
      EditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.inputPassword;
      EditText inputPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputPassword == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textSignIn;
      TextView textSignIn = ViewBindings.findChildViewById(rootView, id);
      if (textSignIn == null) {
        break missingId;
      }

      id = R.id.textWelcome;
      TextView textWelcome = ViewBindings.findChildViewById(rootView, id);
      if (textWelcome == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, buttonSignUp,
          buttonToggleConfirmPassword, buttonTogglePassword, constraintLayout,
          constraintLayoutConfirmPassword, inputConfirmPassword, inputEmail, inputName,
          inputPassword, progressBar, textSignIn, textWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
