// Generated by view binder compiler. Do not edit!
package com.example.shoesstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoesstore.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewholderPopListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView oldPriceTxt;

  @NonNull
  public final ShapeableImageView pic;

  @NonNull
  public final TextView priceTxt;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final TextView ratingTxt;

  @NonNull
  public final TextView title;

  @NonNull
  public final View view;

  private ViewholderPopListBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView oldPriceTxt, @NonNull ShapeableImageView pic, @NonNull TextView priceTxt,
      @NonNull RatingBar ratingBar, @NonNull TextView ratingTxt, @NonNull TextView title,
      @NonNull View view) {
    this.rootView = rootView;
    this.oldPriceTxt = oldPriceTxt;
    this.pic = pic;
    this.priceTxt = priceTxt;
    this.ratingBar = ratingBar;
    this.ratingTxt = ratingTxt;
    this.title = title;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewholderPopListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewholderPopListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewholder_pop_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewholderPopListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.oldPriceTxt;
      TextView oldPriceTxt = ViewBindings.findChildViewById(rootView, id);
      if (oldPriceTxt == null) {
        break missingId;
      }

      id = R.id.pic;
      ShapeableImageView pic = ViewBindings.findChildViewById(rootView, id);
      if (pic == null) {
        break missingId;
      }

      id = R.id.priceTxt;
      TextView priceTxt = ViewBindings.findChildViewById(rootView, id);
      if (priceTxt == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.ratingTxt;
      TextView ratingTxt = ViewBindings.findChildViewById(rootView, id);
      if (ratingTxt == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new ViewholderPopListBinding((ConstraintLayout) rootView, oldPriceTxt, pic, priceTxt,
          ratingBar, ratingTxt, title, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
