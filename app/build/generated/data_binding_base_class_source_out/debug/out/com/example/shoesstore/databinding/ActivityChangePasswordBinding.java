// Generated by view binder compiler. Do not edit!
package com.example.shoesstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoesstore.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonChangePassword;

  @NonNull
  public final Button buttonToggleConfirmNewPassword;

  @NonNull
  public final Button buttonToggleNewPassword;

  @NonNull
  public final AppCompatImageView imageBack;

  @NonNull
  public final EditText inputConfirmNewPassword;

  @NonNull
  public final EditText inputNewPassword;

  @NonNull
  public final ProgressBar progressBar;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonChangePassword, @NonNull Button buttonToggleConfirmNewPassword,
      @NonNull Button buttonToggleNewPassword, @NonNull AppCompatImageView imageBack,
      @NonNull EditText inputConfirmNewPassword, @NonNull EditText inputNewPassword,
      @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.buttonChangePassword = buttonChangePassword;
    this.buttonToggleConfirmNewPassword = buttonToggleConfirmNewPassword;
    this.buttonToggleNewPassword = buttonToggleNewPassword;
    this.imageBack = imageBack;
    this.inputConfirmNewPassword = inputConfirmNewPassword;
    this.inputNewPassword = inputNewPassword;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonChangePassword;
      MaterialButton buttonChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonChangePassword == null) {
        break missingId;
      }

      id = R.id.buttonToggleConfirmNewPassword;
      Button buttonToggleConfirmNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonToggleConfirmNewPassword == null) {
        break missingId;
      }

      id = R.id.buttonToggleNewPassword;
      Button buttonToggleNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonToggleNewPassword == null) {
        break missingId;
      }

      id = R.id.imageBack;
      AppCompatImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.inputConfirmNewPassword;
      EditText inputConfirmNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputConfirmNewPassword == null) {
        break missingId;
      }

      id = R.id.inputNewPassword;
      EditText inputNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputNewPassword == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, buttonChangePassword,
          buttonToggleConfirmNewPassword, buttonToggleNewPassword, imageBack,
          inputConfirmNewPassword, inputNewPassword, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
