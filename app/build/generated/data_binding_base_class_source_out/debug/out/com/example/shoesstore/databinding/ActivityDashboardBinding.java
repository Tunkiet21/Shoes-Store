// Generated by view binder compiler. Do not edit!
package com.example.shoesstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shoesstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardCategory;

  @NonNull
  public final CardView cardCoupon;

  @NonNull
  public final CardView cardCustomer;

  @NonNull
  public final CardView cardLogout;

  @NonNull
  public final CardView cardOrder;

  @NonNull
  public final CardView cardProduct;

  @NonNull
  public final View header;

  @NonNull
  public final TextView textView;

  private ActivityDashboardBinding(@NonNull RelativeLayout rootView, @NonNull CardView cardCategory,
      @NonNull CardView cardCoupon, @NonNull CardView cardCustomer, @NonNull CardView cardLogout,
      @NonNull CardView cardOrder, @NonNull CardView cardProduct, @NonNull View header,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.cardCategory = cardCategory;
    this.cardCoupon = cardCoupon;
    this.cardCustomer = cardCustomer;
    this.cardLogout = cardLogout;
    this.cardOrder = cardOrder;
    this.cardProduct = cardProduct;
    this.header = header;
    this.textView = textView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_category;
      CardView cardCategory = ViewBindings.findChildViewById(rootView, id);
      if (cardCategory == null) {
        break missingId;
      }

      id = R.id.card_coupon;
      CardView cardCoupon = ViewBindings.findChildViewById(rootView, id);
      if (cardCoupon == null) {
        break missingId;
      }

      id = R.id.card_customer;
      CardView cardCustomer = ViewBindings.findChildViewById(rootView, id);
      if (cardCustomer == null) {
        break missingId;
      }

      id = R.id.card_logout;
      CardView cardLogout = ViewBindings.findChildViewById(rootView, id);
      if (cardLogout == null) {
        break missingId;
      }

      id = R.id.card_order;
      CardView cardOrder = ViewBindings.findChildViewById(rootView, id);
      if (cardOrder == null) {
        break missingId;
      }

      id = R.id.card_product;
      CardView cardProduct = ViewBindings.findChildViewById(rootView, id);
      if (cardProduct == null) {
        break missingId;
      }

      id = R.id.header;
      View header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((RelativeLayout) rootView, cardCategory, cardCoupon,
          cardCustomer, cardLogout, cardOrder, cardProduct, header, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
